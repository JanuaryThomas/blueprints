{{$app := .AppName | kebabcase}}
{{$clusterName := .ClusterName | kebabcase}}
apiVersion: xl-deploy/v1
kind: Applications
spec:
- name: {{$app}}
  type: core.Directory
  children:
{{if eq .ProvisionCluster "true"}}
# Provision GKE cluster using Terraform templates
  - name: GKE-TERRAFORM
    type: core.Directory
    children:
    - name: {{$app}}-terraform-gke
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{$app}}-gke
          type: terraform.Module
          file: !file ../terraform
          inputVariables:
            project_id: {{.GCPProjectID}}
            name: {{$app}}
            region: {{.GCPRegion}}
            gke_master_user: {{.K8SMasterUser}}
            gke_master_pass: {{.K8SMasterPassword}}
          boundTemplates:
          - "../gcp-gke-{{$clusterName}}"
        # - "../gcp-gke-{{$clusterName}}-env"  {{/* TODO change to new environment once XLD issue is fixed  */}}

        templates:
        - name: gcp-gke-{{$clusterName}}
          type: template.k8s.Master
          username: {{.K8SMasterUser}}
          password: {{.K8SMasterPassword}}
          apiServerURL: 'https://{{"{{%outputVariables.endpoint%}}"}}'
          skipTLS: true
          instanceName: {{$app}}/gcp-gke-{{$clusterName}}
        {{/* TODO change to new environment once XLD issue is fixed */}}
        # - name: gcp-gke-{{$clusterName}}-env
        #   type: template.udm.Environment
        #   members:
        #   - ../gcp-gke-{{$clusterName}}
        #   instanceName: {{$app}}/gcp-gke-{{$clusterName}}

{{end}}
  - name: K8S
    type: core.Directory
{{if eq .ProvisionCluster "true"}}
# Provision K8s namespace
    children:
    - name: {{$app}}-namespace
      type: udm.Application
      children:
      - name: '1.0.0'
        type: udm.DeploymentPackage
        deployables:
        - name: {{.Namespace}}
          type: k8s.NamespaceSpec
          namespaceName: '{{.Namespace}}'
{{end}}